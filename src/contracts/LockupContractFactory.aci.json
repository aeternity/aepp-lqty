{"encodedAci":{"contract":{"event":{"variant":[{"LQTYTokenAddressSet":["ILQTYToken"]},{"LockupContractDeployedThroughFactory":["address","address","string"]},{"OwnershipTransferred":["address","address"]}]},"functions":[{"arguments":[],"name":"init","payable":false,"returns":"LockupContractFactory.state","stateful":false},{"arguments":[{"name":"lqty_token","type":"ILQTYToken"}],"name":"set_lqty_token","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"beneficiary","type":"address"},{"name":"unlock_time","type":"int"}],"name":"deploy_lockup_contract","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"contract'","type":"address"}],"name":"is_registered_lockup","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"owner","payable":false,"returns":{"option":["address"]},"stateful":false}],"kind":"contract_main","name":"LockupContractFactory","payable":false,"state":{"record":[{"name":"owner","type":{"option":["address"]}},{"name":"lqty_token","type":{"option":["ILQTYToken"]}},{"name":"lockup_contract_to_deployer","type":{"map":["address","address"]}}]},"type_defs":[]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"Option","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"send_to_lqty_staking","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"get_deployment_start_time","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_lp_rewards_entitlement","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"meta_info","payable":false,"returns":"ILQTYToken.meta_info","stateful":false},{"arguments":[],"name":"total_supply","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"balance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"ILQTYToken.allowance_accounts"}],"name":"allowance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"transfer","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"create_allowance","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"int"}],"name":"transfer_allowance","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"ILQTYToken","payable":false,"type_defs":[{"name":"allowance_accounts","typedef":{"record":[{"name":"from_account","type":"address"},{"name":"for_account","type":"address"}]},"vars":[]},{"name":"meta_info","typedef":{"record":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"int"}]},"vars":[]}]}},{"namespace":{"name":"SafeMath","type_defs":[]}},{"namespace":{"name":"Utils","type_defs":[]}},{"contract":{"event":{"variant":[{"LockupContractCreated":["address","int"]},{"LockupContractEmptied":["int"]}]},"functions":[{"arguments":[{"name":"unlock_time","type":"int"},{"name":"lqty_token","type":"ILQTYToken"},{"name":"beneficiary","type":"address"}],"name":"init","payable":false,"returns":"LockupContract.state","stateful":false},{"arguments":[],"name":"withdraw_lqty","payable":false,"returns":"unit","stateful":true}],"kind":"contract_child","name":"LockupContract","payable":false,"state":{"record":[{"name":"lqty_token","type":"ILQTYToken"},{"name":"beneficiary","type":"address"},{"name":"unlock_time","type":"int"}]},"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"}],"name":"set_lqty_token_address","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"deploy_lockup_contract","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"is_registered_lockup","payable":false,"returns":"bool","stateful":false}],"kind":"contract_interface","name":"ILockupContractFactory","payable":false,"type_defs":[]}}],"interface":"\n\n\n\ncontract interface ILQTYToken =\n  record allowance_accounts = {from_account : address,for_account : address}\n  record meta_info = {name : string,symbol : string,decimals : int}\n  stateful entrypoint send_to_lqty_staking : (address, int) => unit\n  entrypoint get_deployment_start_time : () => int\n  entrypoint get_lp_rewards_entitlement : () => int\n  entrypoint meta_info : () => ILQTYToken.meta_info\n  entrypoint total_supply : () => int\n  entrypoint balance : (address) => option(int)\n  entrypoint allowance : (ILQTYToken.allowance_accounts) => option(int)\n  stateful entrypoint transfer : (address, int) => unit\n  stateful entrypoint create_allowance : (address, int) => unit\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\n\n\n\ncontract LockupContract =\n  record state = {lqty_token : ILQTYToken,beneficiary : address,unlock_time : int}\n  datatype event = LockupContractCreated(address, int) | LockupContractEmptied(int)\n  entrypoint init : (int, ILQTYToken, address) => LockupContract.state\n  stateful entrypoint withdraw_lqty : () => unit\n\ncontract interface ILockupContractFactory =\n  stateful entrypoint set_lqty_token_address : (address) => unit\n  stateful entrypoint deploy_lockup_contract : (address, int) => unit\n  entrypoint is_registered_lockup : (address) => bool\n\nmain contract LockupContractFactory =\n  record state = {owner : option(address),lqty_token : option(ILQTYToken),lockup_contract_to_deployer : map(address, address)}\n  datatype event = LQTYTokenAddressSet(ILQTYToken) | LockupContractDeployedThroughFactory(address, address, string) | OwnershipTransferred(address, address)\n  entrypoint init : () => LockupContractFactory.state\n  stateful entrypoint set_lqty_token : (ILQTYToken) => unit\n  stateful entrypoint deploy_lockup_contract : (address, int) => unit\n  entrypoint is_registered_lockup : (address) => bool\n  entrypoint owner : () => option(address)\n"}