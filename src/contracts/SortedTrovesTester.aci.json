{"encodedAci":{"contract":{"functions":[{"arguments":[{"name":"sorted_troves","type":"ISortedTroves"}],"name":"init","payable":false,"returns":"SortedTrovesTester.state","stateful":true},{"arguments":[{"name":"id","type":"address"},{"name":"nicr","type":"int"},{"name":"prev_id_opt","type":{"option":["address"]}},{"name":"next_id_opt","type":{"option":["address"]}}],"name":"insert","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"get_troves_manager","payable":false,"returns":"TrovesManager","stateful":false},{"arguments":[{"name":"id","type":"address"}],"name":"remove","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"id","type":"address"},{"name":"new_nicr","type":"int"},{"name":"prev_id","type":{"option":["address"]}},{"name":"next_id","type":{"option":["address"]}}],"name":"re_insert","payable":false,"returns":{"tuple":[]},"stateful":true}],"kind":"contract_main","name":"SortedTrovesTester","payable":false,"state":{"record":[{"name":"sorted_troves","type":"ISortedTroves"},{"name":"troves_manager","type":"TrovesManager"}]},"type_defs":[]}},"externalEncodedAci":[{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"},{"name":"_3","type":{"option":["address"]}},{"name":"_4","type":{"option":["address"]}}],"name":"insert","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"remove","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"},{"name":"_3","type":{"option":["address"]}},{"name":"_4","type":{"option":["address"]}}],"name":"re_insert","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"contains","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"is_full","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"is_empty","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"get_size","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_max_size","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_first","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[],"name":"get_last","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_next","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_prev","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":{"option":["address"]}},{"name":"_3","type":{"option":["address"]}}],"name":"valid_insert_position","payable":false,"returns":"bool","stateful":false},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"option":["address"]}},{"name":"_3","type":{"option":["address"]}}],"name":"find_insert_position","payable":false,"returns":"bool","stateful":false}],"kind":"contract_interface","name":"ISortedTroves","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"id","type":"address"}],"name":"get_nominal_icr","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"id","type":"address"},{"name":"value","type":"int"}],"name":"get_current_icr","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"sorted_troves","type":"ISortedTroves"},{"name":"id","type":"address"}],"name":"remove","payable":false,"returns":{"tuple":[]},"stateful":false}],"kind":"contract_child","name":"TrovesManager","payable":false,"type_defs":[]}}],"interface":"contract interface ISortedTroves =\n  stateful entrypoint insert : (address, int, option(address), option(address)) => unit\n  stateful entrypoint remove : (address) => unit\n  stateful entrypoint re_insert : (address, int, option(address), option(address)) => unit\n  entrypoint contains : (address) => bool\n  entrypoint is_full : () => bool\n  entrypoint is_empty : () => bool\n  entrypoint get_size : () => int\n  entrypoint get_max_size : () => int\n  entrypoint get_first : () => option(address)\n  entrypoint get_last : () => option(address)\n  entrypoint get_next : (address) => option(address)\n  entrypoint get_prev : (address) => option(address)\n  entrypoint valid_insert_position : (address, option(address), option(address)) => bool\n  entrypoint find_insert_position : (int, option(address), option(address)) => bool\n\ncontract TrovesManager =\n  entrypoint get_nominal_icr : (address) => int\n  entrypoint get_current_icr : (address, int) => int\n  entrypoint remove : (ISortedTroves, address) => unit\n\nmain contract SortedTrovesTester =\n  record state = {sorted_troves : ISortedTroves,troves_manager : TrovesManager}\n  stateful entrypoint init : (ISortedTroves) => SortedTrovesTester.state\n  stateful entrypoint insert : (address, int, option(address), option(address)) => unit\n  entrypoint get_troves_manager : () => TrovesManager\n  stateful entrypoint remove : (address) => unit\n  stateful entrypoint re_insert : (address, int, option(address), option(address)) => unit\n"}