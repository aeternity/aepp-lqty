{"encodedAci":{"contract":{"event":{"variant":[{"BorrowerOperationsAddressChanged":["IBorrowerOperations"]},{"TroveManagerAddressChanged":["ITroveManager"]},{"ActivePoolAddressChanged":["IActivePool"]},{"CollBalanceUpdated":["address","int"]},{"AESent":["address","int"]},{"OwnershipTransferred":["address","address"]}]},"functions":[{"arguments":[],"name":"init","payable":false,"returns":"CollSurplusPool.state","stateful":false},{"arguments":[{"name":"addresses","type":"CollSurplusPool.addresses"}],"name":"set_addresses","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"get_ae","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"account","type":"address"}],"name":"get_collateral","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"account","type":"address"},{"name":"amount","type":"int"}],"name":"account_surplus","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"account","type":"address"}],"name":"claim_coll","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"receive_ae","payable":true,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"owner","payable":false,"returns":{"option":["address"]},"stateful":false}],"kind":"contract_main","name":"CollSurplusPool","payable":false,"state":{"record":[{"name":"owner","type":{"option":["address"]}},{"name":"addresses","type":{"option":["CollSurplusPool.addresses"]}},{"name":"ae","type":"int"},{"name":"balances","type":{"map":["address","int"]}}]},"type_defs":[{"name":"addresses","typedef":{"record":[{"name":"borrower_operations","type":"IBorrowerOperations"},{"name":"trove_manager","type":"ITroveManager"},{"name":"active_pool","type":"IActivePool"}]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"Option","type_defs":[]}},{"namespace":{"name":"SafeMath","type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"send_ae","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"send_ae_default_pool","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"receive_ae","payable":true,"returns":"unit","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"deposit_to","payable":true,"returns":"unit","stateful":true},{"arguments":[],"name":"get_ae","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_aeusd_debt","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"}],"name":"increase_aeusd_debt","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"decrease_aeusd_debt","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"IActivePool","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"int"}],"name":"send_ae_to_active_pool","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"receive_ae","payable":true,"returns":"unit","stateful":false},{"arguments":[],"name":"get_ae","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_aeusd_debt","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"}],"name":"increase_aeusd_debt","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"decrease_aeusd_debt","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"IDefaultPool","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"}],"name":"set_addresses","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"issue_lqty","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"send_lqty","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"ICommunityIssuance","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"IActivePool"},{"name":"_4","type":"address"},{"name":"_5","type":"address"},{"name":"_6","type":"address"},{"name":"_7","type":"ICommunityIssuance"}],"name":"set_addresses","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"option":["address"]}}],"name":"provide_to_sp","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"withdraw_from_sp","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":{"option":["address"]}},{"name":"_2","type":{"option":["address"]}}],"name":"withdraw_ae_gain_to_trove","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"register_front_end","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"}],"name":"offset","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"get_ae","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_total_aeusd_deposits","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_depositor_ae_gain","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_depositor_lqty_gain","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_front_end_lqty_gain","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_compounded_aeusd_deposit","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_compounded_front_end_stake","payable":false,"returns":"int","stateful":false}],"kind":"contract_interface","name":"IStabilityPool","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"address"}],"name":"set_addresses","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"get_ae","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_collateral","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"account_surplus","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"claim_coll","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"ICollSurplusPool","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[],"name":"fetch_price","payable":false,"returns":"int","stateful":false}],"kind":"contract_interface","name":"IPriceFeed","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"mint","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"burn","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"int"}],"name":"send_to_pool","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"int"}],"name":"return_from_pool","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"owner","payable":false,"returns":"address","stateful":false},{"arguments":[],"name":"meta_info","payable":false,"returns":"IAEUSDToken.meta_info","stateful":false},{"arguments":[],"name":"total_supply","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"balance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"transfer","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"IAEUSDToken.allowance_accounts"}],"name":"allowance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"create_allowance","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"int"}],"name":"transfer_allowance","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"IAEUSDToken","payable":false,"type_defs":[{"name":"allowance_accounts","typedef":{"record":[{"name":"from_account","type":"address"},{"name":"for_account","type":"address"}]},"vars":[]},{"name":"meta_info","typedef":{"record":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"int"}]},"vars":[]}]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"send_to_lqty_staking","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"get_deployment_start_time","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_lp_rewards_entitlement","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"owner","payable":false,"returns":"address","stateful":false},{"arguments":[],"name":"meta_info","payable":false,"returns":"ILQTYToken.meta_info","stateful":false},{"arguments":[],"name":"total_supply","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"balance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"transfer","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"ILQTYToken.allowance_accounts"}],"name":"allowance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"create_allowance","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"int"}],"name":"transfer_allowance","payable":false,"returns":"unit","stateful":true}],"kind":"contract_interface","name":"ILQTYToken","payable":false,"type_defs":[{"name":"allowance_accounts","typedef":{"record":[{"name":"from_account","type":"address"},{"name":"for_account","type":"address"}]},"vars":[]},{"name":"meta_info","typedef":{"record":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"int"}]},"vars":[]}]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"address"},{"name":"_3","type":"address"},{"name":"_4","type":"address"},{"name":"_5","type":"address"}],"name":"set_addresses","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"stake","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"unstake","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"increase_f_ae","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"increase_f_aeusd","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"get_pending_ae_gain","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_pending_aeusd_gain","payable":false,"returns":"int","stateful":false}],"kind":"contract_interface","name":"ILQTYStaking","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[],"name":"stability_pool","payable":false,"returns":"IStabilityPool","stateful":false},{"arguments":[],"name":"lusd_token","payable":false,"returns":"IAEUSDToken","stateful":false},{"arguments":[],"name":"lqty_token","payable":false,"returns":"ILQTYToken","stateful":false},{"arguments":[],"name":"lqty_staking","payable":false,"returns":"ILQTYStaking","stateful":false},{"arguments":[],"name":"get_trove_owners_count","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"}],"name":"get_trove_from_trove_owners_array","payable":false,"returns":"address","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_nominal_icr","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"get_current_icr","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"liquidate","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"liquidate_troves","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":{"list":["address"]}}],"name":"batch_liquidate_troves","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"option":["address"]}},{"name":"_3","type":{"option":["address"]}},{"name":"_4","type":{"option":["address"]}},{"name":"_5","type":"int"},{"name":"_6","type":"int"},{"name":"_7","type":"int"}],"name":"redeem_collateral","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"update_stake_and_total_stakes","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"update_trove_reward_snapshots","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"add_trove_owner_to_array","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"apply_pending_rewards","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"get_pending_eth_reward","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_pending_aeusd_debt_reward","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"has_pending_rewards","payable":false,"returns":"bool","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_entire_debt_and_coll","payable":false,"returns":"ITroveManager.debt_and_coll","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"close_trove","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"remove_stake","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"get_redemption_rate","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_redemption_rate_with_decay","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"}],"name":"get_redemption_fee_with_decay","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_borrowing_rate","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_borrowing_rate_with_decay","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"}],"name":"get_borrowing_fee","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"}],"name":"get_borrowing_fee_with_decay","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"decay_base_rate_from_borrowing","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"get_trove_status","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_trove_stake","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_trove_debt","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_trove_coll","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"set_trove_status","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"increase_trove_coll","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"decrease_trove_coll","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"increase_trove_debt","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"}],"name":"decrease_trove_debt","payable":false,"returns":"int","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"get_tcr","payable":false,"returns":"int","stateful":false},{"arguments":[{"name":"_1","type":"int"}],"name":"check_recovery_mode","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"price_feed","payable":false,"returns":"IPriceFeed","stateful":false}],"kind":"contract_interface","name":"ITroveManager","payable":false,"type_defs":[{"name":"debt_and_coll","typedef":{"record":[{"name":"debt","type":"int"},{"name":"coll","type":"int"},{"name":"pending_aeusd_debt_reward","type":"int"},{"name":"pending_eth_reward","type":"int"}]},"vars":[]}]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"},{"name":"_3","type":{"option":["address"]}},{"name":"_4","type":{"option":["address"]}}],"name":"insert","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"remove","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":"int"},{"name":"_3","type":{"option":["address"]}},{"name":"_4","type":{"option":["address"]}}],"name":"re_insert","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"address"}],"name":"contains","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"is_full","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"is_empty","payable":false,"returns":"bool","stateful":false},{"arguments":[],"name":"get_size","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_max_size","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"get_first","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[],"name":"get_last","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_next","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"}],"name":"get_prev","payable":false,"returns":{"option":["address"]},"stateful":false},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":{"option":["address"]}},{"name":"_3","type":{"option":["address"]}}],"name":"valid_insert_position","payable":false,"returns":"bool","stateful":false},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"option":["address"]}},{"name":"_3","type":{"option":["address"]}}],"name":"find_insert_position","payable":false,"returns":"bool","stateful":false}],"kind":"contract_interface","name":"ISortedTroves","payable":false,"type_defs":[]}},{"contract":{"functions":[{"arguments":[{"name":"_1","type":"ITroveManager"},{"name":"_2","type":"IActivePool"},{"name":"_3","type":"IDefaultPool"},{"name":"_4","type":"IStabilityPool"},{"name":"_5","type":"address"},{"name":"_6","type":"ICollSurplusPool"},{"name":"_7","type":"IPriceFeed"},{"name":"_8","type":"ISortedTroves"},{"name":"_9","type":"IAEUSDToken"},{"name":"_10","type":"ILQTYStaking"}],"name":"set_addresses","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":{"option":["address"]}},{"name":"_4","type":{"option":["address"]}}],"name":"open_trove","payable":true,"returns":"IBorrowerOperations.open_trove","stateful":true},{"arguments":[{"name":"_1","type":{"option":["address"]}},{"name":"_2","type":{"option":["address"]}}],"name":"add_coll","payable":false,"returns":"IBorrowerOperations.adjust_trove","stateful":true},{"arguments":[{"name":"_1","type":"address"},{"name":"_2","type":{"option":["address"]}},{"name":"_3","type":{"option":["address"]}}],"name":"move_ae_gain_to_trove","payable":false,"returns":"IBorrowerOperations.adjust_trove","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"option":["address"]}},{"name":"_3","type":{"option":["address"]}}],"name":"withdraw_coll","payable":false,"returns":"IBorrowerOperations.adjust_trove","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":{"option":["address"]}},{"name":"_4","type":{"option":["address"]}}],"name":"withdraw_aeusd","payable":false,"returns":"IBorrowerOperations.adjust_trove","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":{"option":["address"]}},{"name":"_3","type":{"option":["address"]}}],"name":"repay_aeusd","payable":false,"returns":"IBorrowerOperations.adjust_trove","stateful":true},{"arguments":[{"name":"_1","type":"int"},{"name":"_2","type":"int"},{"name":"_3","type":"int"},{"name":"_4","type":"bool"},{"name":"_5","type":{"option":["address"]}},{"name":"_6","type":{"option":["address"]}}],"name":"adjust_trove","payable":false,"returns":"IBorrowerOperations.adjust_trove","stateful":true},{"arguments":[],"name":"close_trove","payable":false,"returns":"unit","stateful":true},{"arguments":[],"name":"claim_collateral","payable":false,"returns":"unit","stateful":true},{"arguments":[{"name":"_1","type":"int"}],"name":"get_composite_debt","payable":false,"returns":"int","stateful":false}],"kind":"contract_interface","name":"IBorrowerOperations","payable":false,"type_defs":[{"name":"adjust_trove","typedef":{"record":[{"name":"price","type":"int"},{"name":"is_coll_increase","type":"bool"},{"name":"coll_change","type":"int"},{"name":"net_debt_change","type":"int"},{"name":"debt","type":"int"},{"name":"coll","type":"int"},{"name":"old_icr","type":"int"},{"name":"new_icr","type":"int"},{"name":"new_tcr","type":"int"},{"name":"aeusd_fee","type":"int"},{"name":"new_debt","type":"int"},{"name":"new_coll","type":"int"},{"name":"stake","type":"int"}]},"vars":[]},{"name":"open_trove","typedef":{"record":[{"name":"price","type":"int"},{"name":"aeusd_fee","type":"int"},{"name":"net_debt","type":"int"},{"name":"composite_debt","type":"int"},{"name":"icr","type":"int"},{"name":"nicr","type":"int"},{"name":"stake","type":"int"},{"name":"array_index","type":"int"}]},"vars":[]}]}},{"namespace":{"name":"String","type_defs":[]}},{"namespace":{"name":"Utils","type_defs":[]}}],"interface":"\n\n\n\ncontract interface IActivePool =\n  stateful entrypoint send_ae : (address, int) => unit\n  stateful entrypoint send_ae_default_pool : (int) => unit\n  payable entrypoint receive_ae : () => unit\n  payable stateful entrypoint deposit_to : (address) => unit\n  entrypoint get_ae : () => int\n  entrypoint get_aeusd_debt : () => int\n  stateful entrypoint increase_aeusd_debt : (int) => unit\n  stateful entrypoint decrease_aeusd_debt : (int) => unit\n\ncontract interface IDefaultPool =\n  stateful entrypoint send_ae_to_active_pool : (int) => unit\n  payable entrypoint receive_ae : () => unit\n  entrypoint get_ae : () => int\n  entrypoint get_aeusd_debt : () => int\n  stateful entrypoint increase_aeusd_debt : (int) => unit\n  stateful entrypoint decrease_aeusd_debt : (int) => unit\n\ncontract interface ICommunityIssuance =\n  stateful entrypoint set_addresses : (address, address) => unit\n  entrypoint issue_lqty : () => int\n  stateful entrypoint send_lqty : (address, int) => unit\n\ncontract interface IStabilityPool =\n  stateful entrypoint set_addresses : (address, address, IActivePool, address, address, address, ICommunityIssuance) => unit\n  stateful entrypoint provide_to_sp : (int, option(address)) => unit\n  stateful entrypoint withdraw_from_sp : (int) => unit\n  stateful entrypoint withdraw_ae_gain_to_trove : (option(address), option(address)) => unit\n  stateful entrypoint register_front_end : (int) => unit\n  stateful entrypoint offset : (int, int) => unit\n  entrypoint get_ae : () => int\n  entrypoint get_total_aeusd_deposits : () => int\n  entrypoint get_depositor_ae_gain : (address) => int\n  entrypoint get_depositor_lqty_gain : (address) => int\n  entrypoint get_front_end_lqty_gain : (address) => int\n  entrypoint get_compounded_aeusd_deposit : (address) => int\n  entrypoint get_compounded_front_end_stake : (address) => int\n\ncontract interface ICollSurplusPool =\n  stateful entrypoint set_addresses : (address, address, address) => unit\n  entrypoint get_ae : () => int\n  entrypoint get_collateral : (address) => int\n  stateful entrypoint account_surplus : (address, int) => unit\n  stateful entrypoint claim_coll : (address) => unit\n\ncontract interface IPriceFeed =\n  entrypoint fetch_price : () => int\n\ncontract interface IAEUSDToken =\n  record allowance_accounts = {from_account : address,for_account : address}\n  record meta_info = {name : string,symbol : string,decimals : int}\n  stateful entrypoint mint : (address, int) => unit\n  stateful entrypoint burn : (address, int) => unit\n  stateful entrypoint send_to_pool : (address, address, int) => unit\n  stateful entrypoint return_from_pool : (address, address, int) => unit\n  entrypoint owner : () => address\n  entrypoint meta_info : () => IAEUSDToken.meta_info\n  entrypoint total_supply : () => int\n  entrypoint balance : (address) => option(int)\n  stateful entrypoint transfer : (address, int) => unit\n  entrypoint allowance : (IAEUSDToken.allowance_accounts) => option(int)\n  stateful entrypoint create_allowance : (address, int) => unit\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\n\ncontract interface ILQTYToken =\n  record allowance_accounts = {from_account : address,for_account : address}\n  record meta_info = {name : string,symbol : string,decimals : int}\n  stateful entrypoint send_to_lqty_staking : (address, int) => unit\n  entrypoint get_deployment_start_time : () => int\n  entrypoint get_lp_rewards_entitlement : () => int\n  entrypoint owner : () => address\n  entrypoint meta_info : () => ILQTYToken.meta_info\n  entrypoint total_supply : () => int\n  entrypoint balance : (address) => option(int)\n  stateful entrypoint transfer : (address, int) => unit\n  entrypoint allowance : (ILQTYToken.allowance_accounts) => option(int)\n  stateful entrypoint create_allowance : (address, int) => unit\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\n\ncontract interface ILQTYStaking =\n  stateful entrypoint set_addresses : (address, address, address, address, address) => unit\n  stateful entrypoint stake : (int) => unit\n  stateful entrypoint unstake : (int) => unit\n  stateful entrypoint increase_f_ae : (int) => unit\n  stateful entrypoint increase_f_aeusd : (int) => unit\n  entrypoint get_pending_ae_gain : (address) => int\n  entrypoint get_pending_aeusd_gain : (address) => int\n\ncontract interface ITroveManager =\n  record debt_and_coll = {debt : int,coll : int,pending_aeusd_debt_reward : int,pending_eth_reward : int}\n  entrypoint stability_pool : () => IStabilityPool\n  entrypoint lusd_token : () => IAEUSDToken\n  entrypoint lqty_token : () => ILQTYToken\n  entrypoint lqty_staking : () => ILQTYStaking\n  entrypoint get_trove_owners_count : () => int\n  entrypoint get_trove_from_trove_owners_array : (int) => address\n  entrypoint get_nominal_icr : (address) => int\n  entrypoint get_current_icr : (address, int) => int\n  stateful entrypoint liquidate : (address) => unit\n  stateful entrypoint liquidate_troves : (int) => unit\n  stateful entrypoint batch_liquidate_troves : (list(address)) => unit\n  stateful entrypoint redeem_collateral : (int, option(address), option(address), option(address), int, int, int) => unit\n  stateful entrypoint update_stake_and_total_stakes : (address) => int\n  stateful entrypoint update_trove_reward_snapshots : (address) => unit\n  stateful entrypoint add_trove_owner_to_array : (address) => int\n  stateful entrypoint apply_pending_rewards : (address) => unit\n  entrypoint get_pending_eth_reward : (address) => int\n  entrypoint get_pending_aeusd_debt_reward : (address) => int\n  entrypoint has_pending_rewards : (address) => bool\n  entrypoint get_entire_debt_and_coll : (address) => ITroveManager.debt_and_coll\n  stateful entrypoint close_trove : (address) => unit\n  stateful entrypoint remove_stake : (address) => unit\n  entrypoint get_redemption_rate : () => int\n  entrypoint get_redemption_rate_with_decay : () => int\n  entrypoint get_redemption_fee_with_decay : (int) => int\n  entrypoint get_borrowing_rate : () => int\n  entrypoint get_borrowing_rate_with_decay : () => int\n  entrypoint get_borrowing_fee : (int) => int\n  entrypoint get_borrowing_fee_with_decay : (int) => int\n  stateful entrypoint decay_base_rate_from_borrowing : () => unit\n  entrypoint get_trove_status : (address) => int\n  entrypoint get_trove_stake : (address) => int\n  entrypoint get_trove_debt : (address) => int\n  entrypoint get_trove_coll : (address) => int\n  stateful entrypoint set_trove_status : (address, int) => unit\n  stateful entrypoint increase_trove_coll : (address, int) => int\n  stateful entrypoint decrease_trove_coll : (address, int) => int\n  stateful entrypoint increase_trove_debt : (address, int) => int\n  stateful entrypoint decrease_trove_debt : (address, int) => int\n  entrypoint get_tcr : (int) => int\n  entrypoint check_recovery_mode : (int) => bool\n  entrypoint price_feed : () => IPriceFeed\n\ncontract interface ISortedTroves =\n  stateful entrypoint insert : (address, int, option(address), option(address)) => unit\n  stateful entrypoint remove : (address) => unit\n  stateful entrypoint re_insert : (address, int, option(address), option(address)) => unit\n  entrypoint contains : (address) => bool\n  entrypoint is_full : () => bool\n  entrypoint is_empty : () => bool\n  entrypoint get_size : () => int\n  entrypoint get_max_size : () => int\n  entrypoint get_first : () => option(address)\n  entrypoint get_last : () => option(address)\n  entrypoint get_next : (address) => option(address)\n  entrypoint get_prev : (address) => option(address)\n  entrypoint valid_insert_position : (address, option(address), option(address)) => bool\n  entrypoint find_insert_position : (int, option(address), option(address)) => bool\n\ncontract interface IBorrowerOperations =\n  record adjust_trove = {price : int,is_coll_increase : bool,coll_change : int,net_debt_change : int,debt : int,coll : int,old_icr : int,new_icr : int,new_tcr : int,aeusd_fee : int,new_debt : int,new_coll : int,stake : int}\n  record open_trove = {price : int,aeusd_fee : int,net_debt : int,composite_debt : int,icr : int,nicr : int,stake : int,array_index : int}\n  stateful entrypoint set_addresses : (ITroveManager, IActivePool, IDefaultPool, IStabilityPool, address, ICollSurplusPool, IPriceFeed, ISortedTroves, IAEUSDToken, ILQTYStaking) => unit\n  payable stateful entrypoint open_trove : (int, int, option(address), option(address)) => IBorrowerOperations.open_trove\n  stateful entrypoint add_coll : (option(address), option(address)) => IBorrowerOperations.adjust_trove\n  stateful entrypoint move_ae_gain_to_trove : (address, option(address), option(address)) => IBorrowerOperations.adjust_trove\n  stateful entrypoint withdraw_coll : (int, option(address), option(address)) => IBorrowerOperations.adjust_trove\n  stateful entrypoint withdraw_aeusd : (int, int, option(address), option(address)) => IBorrowerOperations.adjust_trove\n  stateful entrypoint repay_aeusd : (int, option(address), option(address)) => IBorrowerOperations.adjust_trove\n  stateful entrypoint adjust_trove : (int, int, int, bool, option(address), option(address)) => IBorrowerOperations.adjust_trove\n  stateful entrypoint close_trove : () => unit\n  stateful entrypoint claim_collateral : () => unit\n  entrypoint get_composite_debt : (int) => int\n\n\n\nmain contract CollSurplusPool =\n  record state = {owner : option(address),addresses : option(CollSurplusPool.addresses),ae : int,balances : map(address, int)}\n  datatype event = BorrowerOperationsAddressChanged(IBorrowerOperations) | TroveManagerAddressChanged(ITroveManager) | ActivePoolAddressChanged(IActivePool) | CollBalanceUpdated(address, int) | AESent(address, int) | OwnershipTransferred(address, address)\n  record addresses = {borrower_operations : IBorrowerOperations,trove_manager : ITroveManager,active_pool : IActivePool}\n  entrypoint init : () => CollSurplusPool.state\n  stateful entrypoint set_addresses : (CollSurplusPool.addresses) => unit\n  entrypoint get_ae : () => int\n  entrypoint get_collateral : (address) => int\n  stateful entrypoint account_surplus : (address, int) => unit\n  stateful entrypoint claim_coll : (address) => unit\n  payable stateful entrypoint receive_ae : () => unit\n  entrypoint owner : () => option(address)\n"}