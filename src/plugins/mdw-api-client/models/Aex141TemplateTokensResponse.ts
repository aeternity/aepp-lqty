/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Response Schema for template tokens of a AEX-141 contract
 * @export
 * @interface Aex141TemplateTokensResponse
 */
export interface Aex141TemplateTokensResponse {
    /**
     * Mint event index
     * @type {number}
     * @memberof Aex141TemplateTokensResponse
     */
    logIdx: number;
    /**
     * Owner wallet address
     * @type {string}
     * @memberof Aex141TemplateTokensResponse
     */
    ownerId: string;
    /**
     * NFT id
     * @type {number}
     * @memberof Aex141TemplateTokensResponse
     */
    tokenId: number;
    /**
     * Mint transaction hash
     * @type {string}
     * @memberof Aex141TemplateTokensResponse
     */
    txHash: string;
}

/**
 * Check if a given object implements the Aex141TemplateTokensResponse interface.
 */
export function instanceOfAex141TemplateTokensResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "logIdx" in value;
    isInstance = isInstance && "ownerId" in value;
    isInstance = isInstance && "tokenId" in value;
    isInstance = isInstance && "txHash" in value;

    return isInstance;
}

export function Aex141TemplateTokensResponseFromJSON(json: any): Aex141TemplateTokensResponse {
    return Aex141TemplateTokensResponseFromJSONTyped(json, false);
}

export function Aex141TemplateTokensResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Aex141TemplateTokensResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'logIdx': json['log_idx'],
        'ownerId': json['owner_id'],
        'tokenId': json['token_id'],
        'txHash': json['tx_hash'],
    };
}

export function Aex141TemplateTokensResponseToJSON(value?: Aex141TemplateTokensResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'log_idx': value.logIdx,
        'owner_id': value.ownerId,
        'token_id': value.tokenId,
        'tx_hash': value.txHash,
    };
}

