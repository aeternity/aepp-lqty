/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StatusMdwAsyncTasks
 */
export interface StatusMdwAsyncTasks {
    /**
     * 
     * @type {number}
     * @memberof StatusMdwAsyncTasks
     */
    longTasks: number;
    /**
     * 
     * @type {number}
     * @memberof StatusMdwAsyncTasks
     */
    producerBuffer: number;
    /**
     * 
     * @type {number}
     * @memberof StatusMdwAsyncTasks
     */
    totalPending: number;
}

/**
 * Check if a given object implements the StatusMdwAsyncTasks interface.
 */
export function instanceOfStatusMdwAsyncTasks(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "longTasks" in value;
    isInstance = isInstance && "producerBuffer" in value;
    isInstance = isInstance && "totalPending" in value;

    return isInstance;
}

export function StatusMdwAsyncTasksFromJSON(json: any): StatusMdwAsyncTasks {
    return StatusMdwAsyncTasksFromJSONTyped(json, false);
}

export function StatusMdwAsyncTasksFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatusMdwAsyncTasks {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'longTasks': json['long_tasks'],
        'producerBuffer': json['producer_buffer'],
        'totalPending': json['total_pending'],
    };
}

export function StatusMdwAsyncTasksToJSON(value?: StatusMdwAsyncTasks | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'long_tasks': value.longTasks,
        'producer_buffer': value.producerBuffer,
        'total_pending': value.totalPending,
    };
}

