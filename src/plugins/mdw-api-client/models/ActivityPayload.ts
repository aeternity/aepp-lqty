/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    Aex141TransferEvent,
    instanceOfAex141TransferEvent,
    Aex141TransferEventFromJSON,
    Aex141TransferEventFromJSONTyped,
    Aex141TransferEventToJSON,
} from './Aex141TransferEvent';
import {
    Aex9TransferEvent,
    instanceOfAex9TransferEvent,
    Aex9TransferEventFromJSON,
    Aex9TransferEventFromJSONTyped,
    Aex9TransferEventToJSON,
} from './Aex9TransferEvent';
import {
    InternalContractCallEvent,
    instanceOfInternalContractCallEvent,
    InternalContractCallEventFromJSON,
    InternalContractCallEventFromJSONTyped,
    InternalContractCallEventToJSON,
} from './InternalContractCallEvent';
import {
    InternalTransferEvent,
    instanceOfInternalTransferEvent,
    InternalTransferEventFromJSON,
    InternalTransferEventFromJSONTyped,
    InternalTransferEventToJSON,
} from './InternalTransferEvent';
import {
    Tx,
    instanceOfTx,
    TxFromJSON,
    TxFromJSONTyped,
    TxToJSON,
} from './Tx';

/**
 * @type ActivityPayload
 * 
 * @export
 */
export type ActivityPayload = Aex141TransferEvent | Aex9TransferEvent | InternalContractCallEvent | InternalTransferEvent | Tx;

export function ActivityPayloadFromJSON(json: any): ActivityPayload {
    return ActivityPayloadFromJSONTyped(json, false);
}

export function ActivityPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...Aex141TransferEventFromJSONTyped(json, true), ...Aex9TransferEventFromJSONTyped(json, true), ...InternalContractCallEventFromJSONTyped(json, true), ...InternalTransferEventFromJSONTyped(json, true), ...TxFromJSONTyped(json, true) };
}

export function ActivityPayloadToJSON(value?: ActivityPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfAex141TransferEvent(value)) {
        return Aex141TransferEventToJSON(value as Aex141TransferEvent);
    }
    if (instanceOfAex9TransferEvent(value)) {
        return Aex9TransferEventToJSON(value as Aex9TransferEvent);
    }
    if (instanceOfInternalContractCallEvent(value)) {
        return InternalContractCallEventToJSON(value as InternalContractCallEvent);
    }
    if (instanceOfInternalTransferEvent(value)) {
        return InternalTransferEventToJSON(value as InternalTransferEvent);
    }
    if (instanceOfTx(value)) {
        return TxToJSON(value as Tx);
    }

    return {};
}

