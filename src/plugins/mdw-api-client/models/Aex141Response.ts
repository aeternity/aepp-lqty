/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Response Schema for AEX141 contract
 * @export
 * @interface Aex141Response
 */
export interface Aex141Response {
    /**
     * Metadata base url
     * @type {string}
     * @memberof Aex141Response
     */
    baseUrl: string;
    /**
     * NFT contract id
     * @type {string}
     * @memberof Aex141Response
     */
    contractId: string;
    /**
     * Transaction that created the contract
     * @type {string}
     * @memberof Aex141Response
     */
    contractTxi: string;
    /**
     * Extensions implemented by the contract
     * @type {Array<string>}
     * @memberof Aex141Response
     */
    extensions: Array<string>;
    /**
     * Limit for amount of tokens or templates
     * @type {object}
     * @memberof Aex141Response
     */
    limits: object;
}

/**
 * Check if a given object implements the Aex141Response interface.
 */
export function instanceOfAex141Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "baseUrl" in value;
    isInstance = isInstance && "contractId" in value;
    isInstance = isInstance && "contractTxi" in value;
    isInstance = isInstance && "extensions" in value;
    isInstance = isInstance && "limits" in value;

    return isInstance;
}

export function Aex141ResponseFromJSON(json: any): Aex141Response {
    return Aex141ResponseFromJSONTyped(json, false);
}

export function Aex141ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Aex141Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'baseUrl': json['base_url'],
        'contractId': json['contract_id'],
        'contractTxi': json['contract_txi'],
        'extensions': json['extensions'],
        'limits': json['limits'],
    };
}

export function Aex141ResponseToJSON(value?: Aex141Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'base_url': value.baseUrl,
        'contract_id': value.contractId,
        'contract_txi': value.contractTxi,
        'extensions': value.extensions,
        'limits': value.limits,
    };
}

