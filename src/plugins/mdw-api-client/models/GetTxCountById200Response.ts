/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetTxCountById200Response
 */
export interface GetTxCountById200Response {
    /**
     * The channel close mutual txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelCloseMutualTx?: object;
    /**
     * The channel close solo txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelCloseSoloTx?: object;
    /**
     * The channel create txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelCreateTx?: object;
    /**
     * The channel deposit txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelDepositTx?: object;
    /**
     * The channel force progress txs count
     * @type {number}
     * @memberof GetTxCountById200Response
     */
    channelForceProgressTx?: number;
    /**
     * The channel offchain txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelOffchainTx?: object;
    /**
     * The channel settle txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelSettleTx?: object;
    /**
     * The channel slash txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelSlashTx?: object;
    /**
     * The channel snapshot solo txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelSnapshotSoloTx?: object;
    /**
     * The channel withdraw txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    channelWithdrawTx?: object;
    /**
     * The contract call txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    contractCallTx?: object;
    /**
     * The contract create txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    contractCreateTx?: object;
    /**
     * The ga attach txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    gaAttachTx?: object;
    /**
     * The ga meta txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    gaMetaTx?: object;
    /**
     * The name claim txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    nameClaimTx?: object;
    /**
     * The name preclaim txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    namePreclaimTx?: object;
    /**
     * The name revoke txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    nameRevokeTx?: object;
    /**
     * The name transfer txs count
     * @type {number}
     * @memberof GetTxCountById200Response
     */
    nameTransferTx?: number;
    /**
     * The name update txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    nameUpdateTx?: object;
    /**
     * The oracle extend txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    oracleExtendTx?: object;
    /**
     * The oracle query txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    oracleQueryTx?: object;
    /**
     * The oracle register txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    oracleRegisterTx?: object;
    /**
     * The oracle response txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    oracleResponseTx?: object;
    /**
     * The paying for txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    payingForTx?: object;
    /**
     * The spend txs count
     * @type {object}
     * @memberof GetTxCountById200Response
     */
    spendTx?: object;
}

/**
 * Check if a given object implements the GetTxCountById200Response interface.
 */
export function instanceOfGetTxCountById200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetTxCountById200ResponseFromJSON(json: any): GetTxCountById200Response {
    return GetTxCountById200ResponseFromJSONTyped(json, false);
}

export function GetTxCountById200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetTxCountById200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelCloseMutualTx': !exists(json, 'channel_close_mutual_tx') ? undefined : json['channel_close_mutual_tx'],
        'channelCloseSoloTx': !exists(json, 'channel_close_solo_tx') ? undefined : json['channel_close_solo_tx'],
        'channelCreateTx': !exists(json, 'channel_create_tx') ? undefined : json['channel_create_tx'],
        'channelDepositTx': !exists(json, 'channel_deposit_tx') ? undefined : json['channel_deposit_tx'],
        'channelForceProgressTx': !exists(json, 'channel_force_progress_tx') ? undefined : json['channel_force_progress_tx'],
        'channelOffchainTx': !exists(json, 'channel_offchain_tx') ? undefined : json['channel_offchain_tx'],
        'channelSettleTx': !exists(json, 'channel_settle_tx') ? undefined : json['channel_settle_tx'],
        'channelSlashTx': !exists(json, 'channel_slash_tx') ? undefined : json['channel_slash_tx'],
        'channelSnapshotSoloTx': !exists(json, 'channel_snapshot_solo_tx') ? undefined : json['channel_snapshot_solo_tx'],
        'channelWithdrawTx': !exists(json, 'channel_withdraw_tx') ? undefined : json['channel_withdraw_tx'],
        'contractCallTx': !exists(json, 'contract_call_tx') ? undefined : json['contract_call_tx'],
        'contractCreateTx': !exists(json, 'contract_create_tx') ? undefined : json['contract_create_tx'],
        'gaAttachTx': !exists(json, 'ga_attach_tx') ? undefined : json['ga_attach_tx'],
        'gaMetaTx': !exists(json, 'ga_meta_tx') ? undefined : json['ga_meta_tx'],
        'nameClaimTx': !exists(json, 'name_claim_tx') ? undefined : json['name_claim_tx'],
        'namePreclaimTx': !exists(json, 'name_preclaim_tx') ? undefined : json['name_preclaim_tx'],
        'nameRevokeTx': !exists(json, 'name_revoke_tx') ? undefined : json['name_revoke_tx'],
        'nameTransferTx': !exists(json, 'name_transfer_tx') ? undefined : json['name_transfer_tx'],
        'nameUpdateTx': !exists(json, 'name_update_tx') ? undefined : json['name_update_tx'],
        'oracleExtendTx': !exists(json, 'oracle_extend_tx') ? undefined : json['oracle_extend_tx'],
        'oracleQueryTx': !exists(json, 'oracle_query_tx') ? undefined : json['oracle_query_tx'],
        'oracleRegisterTx': !exists(json, 'oracle_register_tx') ? undefined : json['oracle_register_tx'],
        'oracleResponseTx': !exists(json, 'oracle_response_tx') ? undefined : json['oracle_response_tx'],
        'payingForTx': !exists(json, 'paying_for_tx') ? undefined : json['paying_for_tx'],
        'spendTx': !exists(json, 'spend_tx') ? undefined : json['spend_tx'],
    };
}

export function GetTxCountById200ResponseToJSON(value?: GetTxCountById200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channel_close_mutual_tx': value.channelCloseMutualTx,
        'channel_close_solo_tx': value.channelCloseSoloTx,
        'channel_create_tx': value.channelCreateTx,
        'channel_deposit_tx': value.channelDepositTx,
        'channel_force_progress_tx': value.channelForceProgressTx,
        'channel_offchain_tx': value.channelOffchainTx,
        'channel_settle_tx': value.channelSettleTx,
        'channel_slash_tx': value.channelSlashTx,
        'channel_snapshot_solo_tx': value.channelSnapshotSoloTx,
        'channel_withdraw_tx': value.channelWithdrawTx,
        'contract_call_tx': value.contractCallTx,
        'contract_create_tx': value.contractCreateTx,
        'ga_attach_tx': value.gaAttachTx,
        'ga_meta_tx': value.gaMetaTx,
        'name_claim_tx': value.nameClaimTx,
        'name_preclaim_tx': value.namePreclaimTx,
        'name_revoke_tx': value.nameRevokeTx,
        'name_transfer_tx': value.nameTransferTx,
        'name_update_tx': value.nameUpdateTx,
        'oracle_extend_tx': value.oracleExtendTx,
        'oracle_query_tx': value.oracleQueryTx,
        'oracle_register_tx': value.oracleRegisterTx,
        'oracle_response_tx': value.oracleResponseTx,
        'paying_for_tx': value.payingForTx,
        'spend_tx': value.spendTx,
    };
}

