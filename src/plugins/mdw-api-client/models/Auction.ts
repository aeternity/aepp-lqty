/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuctionInfo } from './AuctionInfo';
import {
    AuctionInfoFromJSON,
    AuctionInfoFromJSONTyped,
    AuctionInfoToJSON,
} from './AuctionInfo';

/**
 * Auction
 * @export
 * @interface Auction
 */
export interface Auction {
    /**
     * 
     * @type {boolean}
     * @memberof Auction
     */
    active?: boolean;
    /**
     * 
     * @type {AuctionInfo}
     * @memberof Auction
     */
    info?: AuctionInfo;
}

/**
 * Check if a given object implements the Auction interface.
 */
export function instanceOfAuction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuctionFromJSON(json: any): Auction {
    return AuctionFromJSONTyped(json, false);
}

export function AuctionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Auction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': !exists(json, 'active') ? undefined : json['active'],
        'info': !exists(json, 'info') ? undefined : AuctionInfoFromJSON(json['info']),
    };
}

export function AuctionToJSON(value?: Auction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'info': AuctionInfoToJSON(value.info),
    };
}

