/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Name Claim
 * @export
 * @interface NameClaim
 */
export interface NameClaim {
    /**
     * 
     * @type {string}
     * @memberof NameClaim
     */
    blockHash?: string;
    /**
     * 
     * @type {number}
     * @memberof NameClaim
     */
    height?: number;
    /**
     * 
     * @type {object}
     * @memberof NameClaim
     */
    tx?: object;
}

/**
 * Check if a given object implements the NameClaim interface.
 */
export function instanceOfNameClaim(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NameClaimFromJSON(json: any): NameClaim {
    return NameClaimFromJSONTyped(json, false);
}

export function NameClaimFromJSONTyped(json: any, ignoreDiscriminator: boolean): NameClaim {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockHash': !exists(json, 'block_hash') ? undefined : json['block_hash'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'tx': !exists(json, 'tx') ? undefined : json['tx'],
    };
}

export function NameClaimToJSON(value?: NameClaim | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'block_hash': value.blockHash,
        'height': value.height,
        'tx': value.tx,
    };
}

