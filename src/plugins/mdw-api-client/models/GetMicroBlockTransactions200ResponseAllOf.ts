/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Tx } from './Tx';
import {
    TxFromJSON,
    TxFromJSONTyped,
    TxToJSON,
} from './Tx';

/**
 * 
 * @export
 * @interface GetMicroBlockTransactions200ResponseAllOf
 */
export interface GetMicroBlockTransactions200ResponseAllOf {
    /**
     * 
     * @type {Array<Tx>}
     * @memberof GetMicroBlockTransactions200ResponseAllOf
     */
    data?: Array<Tx>;
}

/**
 * Check if a given object implements the GetMicroBlockTransactions200ResponseAllOf interface.
 */
export function instanceOfGetMicroBlockTransactions200ResponseAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetMicroBlockTransactions200ResponseAllOfFromJSON(json: any): GetMicroBlockTransactions200ResponseAllOf {
    return GetMicroBlockTransactions200ResponseAllOfFromJSONTyped(json, false);
}

export function GetMicroBlockTransactions200ResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMicroBlockTransactions200ResponseAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(TxFromJSON)),
    };
}

export function GetMicroBlockTransactions200ResponseAllOfToJSON(value?: GetMicroBlockTransactions200ResponseAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(TxToJSON)),
    };
}

