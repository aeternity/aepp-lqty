/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Name } from './Name';
import {
    NameFromJSON,
    NameFromJSONTyped,
    NameToJSON,
} from './Name';
import type { NameInfo } from './NameInfo';
import {
    NameInfoFromJSON,
    NameInfoFromJSONTyped,
    NameInfoToJSON,
} from './NameInfo';

/**
 * 
 * @export
 * @interface SearchNames200ResponseAllOfDataInner
 */
export interface SearchNames200ResponseAllOfDataInner {
    /**
     * 
     * @type {boolean}
     * @memberof SearchNames200ResponseAllOfDataInner
     */
    active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SearchNames200ResponseAllOfDataInner
     */
    hash?: string;
    /**
     * 
     * @type {NameInfo}
     * @memberof SearchNames200ResponseAllOfDataInner
     */
    info?: NameInfo;
    /**
     * 
     * @type {Array<Name>}
     * @memberof SearchNames200ResponseAllOfDataInner
     */
    previous?: Array<Name>;
    /**
     * 
     * @type {string}
     * @memberof SearchNames200ResponseAllOfDataInner
     */
    status?: SearchNames200ResponseAllOfDataInnerStatusEnum;
}


/**
 * @export
 */
export const SearchNames200ResponseAllOfDataInnerStatusEnum = {
    Auction: 'auction',
    Active: 'active',
    Inactive: 'inactive'
} as const;
export type SearchNames200ResponseAllOfDataInnerStatusEnum = typeof SearchNames200ResponseAllOfDataInnerStatusEnum[keyof typeof SearchNames200ResponseAllOfDataInnerStatusEnum];


/**
 * Check if a given object implements the SearchNames200ResponseAllOfDataInner interface.
 */
export function instanceOfSearchNames200ResponseAllOfDataInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SearchNames200ResponseAllOfDataInnerFromJSON(json: any): SearchNames200ResponseAllOfDataInner {
    return SearchNames200ResponseAllOfDataInnerFromJSONTyped(json, false);
}

export function SearchNames200ResponseAllOfDataInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchNames200ResponseAllOfDataInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': !exists(json, 'active') ? undefined : json['active'],
        'hash': !exists(json, 'hash') ? undefined : json['hash'],
        'info': !exists(json, 'info') ? undefined : NameInfoFromJSON(json['info']),
        'previous': !exists(json, 'previous') ? undefined : ((json['previous'] as Array<any>).map(NameFromJSON)),
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function SearchNames200ResponseAllOfDataInnerToJSON(value?: SearchNames200ResponseAllOfDataInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'hash': value.hash,
        'info': NameInfoToJSON(value.info),
        'previous': value.previous === undefined ? undefined : ((value.previous as Array<any>).map(NameToJSON)),
        'status': value.status,
    };
}

