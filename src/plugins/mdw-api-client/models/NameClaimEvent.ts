/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Name claim
 * @export
 * @interface NameClaimEvent
 */
export interface NameClaimEvent {
    /**
     * The claim transaction (internal or not)
     * @type {object}
     * @memberof NameClaimEvent
     */
    tx: object;
    /**
     * The hash of the transaction (either a name claim or a contract call transaction)
     * @type {string}
     * @memberof NameClaimEvent
     */
    txHash: string;
}

/**
 * Check if a given object implements the NameClaimEvent interface.
 */
export function instanceOfNameClaimEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "tx" in value;
    isInstance = isInstance && "txHash" in value;

    return isInstance;
}

export function NameClaimEventFromJSON(json: any): NameClaimEvent {
    return NameClaimEventFromJSONTyped(json, false);
}

export function NameClaimEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): NameClaimEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tx': json['tx'],
        'txHash': json['tx_hash'],
    };
}

export function NameClaimEventToJSON(value?: NameClaimEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tx': value.tx,
        'tx_hash': value.txHash,
    };
}

