/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Transfer
 */
export interface Transfer {
    /**
     * 
     * @type {string}
     * @memberof Transfer
     */
    accountId?: string;
    /**
     * 
     * @type {number}
     * @memberof Transfer
     */
    amount?: number;
    /**
     * 
     * @type {number}
     * @memberof Transfer
     */
    height?: number;
    /**
     * 
     * @type {string}
     * @memberof Transfer
     */
    kind?: TransferKindEnum;
    /**
     * 
     * @type {number}
     * @memberof Transfer
     */
    refTxi?: number | null;
}


/**
 * @export
 */
export const TransferKindEnum = {
    Dev: 'reward_dev',
    Block: 'reward_block'
} as const;
export type TransferKindEnum = typeof TransferKindEnum[keyof typeof TransferKindEnum];


/**
 * Check if a given object implements the Transfer interface.
 */
export function instanceOfTransfer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransferFromJSON(json: any): Transfer {
    return TransferFromJSONTyped(json, false);
}

export function TransferFromJSONTyped(json: any, ignoreDiscriminator: boolean): Transfer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'account_id') ? undefined : json['account_id'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'refTxi': !exists(json, 'ref_txi') ? undefined : json['ref_txi'],
    };
}

export function TransferToJSON(value?: Transfer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account_id': value.accountId,
        'amount': value.amount,
        'height': value.height,
        'kind': value.kind,
        'ref_txi': value.refTxi,
    };
}

