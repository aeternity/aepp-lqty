/* tslint:disable */
/* eslint-disable */
/**
 * Aeternity Middleware
 * API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
 *
 * The version of the OpenAPI document: 1.51.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Internal transfer
 * @export
 * @interface InternalTransferEvent
 */
export interface InternalTransferEvent {
    /**
     * The amount of AE tokens
     * @type {number}
     * @memberof InternalTransferEvent
     */
    amount: number;
    /**
     * The kind of internal transfer
     * @type {string}
     * @memberof InternalTransferEvent
     */
    kind: InternalTransferEventKindEnum;
    /**
     * The transaction hash of a transaction related to the internal transfer
     * @type {string}
     * @memberof InternalTransferEvent
     */
    refTxHash: string;
}


/**
 * @export
 */
export const InternalTransferEventKindEnum = {
    AccountsExtraLima: 'accounts_extra_lima',
    AccountsFortuna: 'accounts_fortuna',
    AccountsGenesis: 'accounts_genesis',
    AccountsLima: 'accounts_lima',
    AccountsMinerva: 'accounts_minerva',
    ContractsLima: 'contracts_lima',
    RewardDev: 'reward_dev',
    RewardBlock: 'reward_block',
    FeeRefundOracle: 'fee_refund_oracle',
    FeeLockName: 'fee_lock_name',
    FeeRefundName: 'fee_refund_name',
    FeeSpendName: 'fee_spend_name',
    RewardOracle: 'reward_oracle'
} as const;
export type InternalTransferEventKindEnum = typeof InternalTransferEventKindEnum[keyof typeof InternalTransferEventKindEnum];


/**
 * Check if a given object implements the InternalTransferEvent interface.
 */
export function instanceOfInternalTransferEvent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "kind" in value;
    isInstance = isInstance && "refTxHash" in value;

    return isInstance;
}

export function InternalTransferEventFromJSON(json: any): InternalTransferEvent {
    return InternalTransferEventFromJSONTyped(json, false);
}

export function InternalTransferEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalTransferEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'kind': json['kind'],
        'refTxHash': json['ref_tx_hash'],
    };
}

export function InternalTransferEventToJSON(value?: InternalTransferEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'kind': value.kind,
        'ref_tx_hash': value.refTxHash,
    };
}

